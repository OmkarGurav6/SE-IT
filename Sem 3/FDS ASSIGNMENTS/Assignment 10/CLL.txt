
#include<stdio.h>
#include<stdlib.h>
#include<math.h>
struct node
{
int coefficient;
int powe;
struct node *link;
};


struct node * multiplication(struct node *p1,struct node *p2)
{
    struct node *h=NULL,*t1=p1,*t2=p2,*prev,*nn;
    if(p1->link==p1 || p2->link==p2)
    {
    printf("\nmultiplication polynomial is zero polynomial");
    return;
    }
    t1=p1->link;
    while(t1!=p1)
    {
            t2=p2->link;
            while(t2!=p2)
            {
            nn=(struct node *)malloc(sizeof(struct node));
            nn->coefficient=t1->coefficient * t2->coefficient;
            nn->powe=t2->powe + t1->powe;
            if(h==NULL)
            {
                h=nn;
                prev=nn;
            }
            else
            {
                prev->link=nn;
                nn->link=h;
                prev=nn;
            }
            t2=t2->link;
            }
            t1=t1->link;

    }
     nn=(struct node *)malloc(sizeof(struct node));
           nn->link=h;
           prev->link=nn;



 return nn;

}



struct node * createlist(int n)
{
 struct node *head=NULL,*nn,*prev;
int i;
 for(i=0;i<=n;i++)
{
  nn=(struct node *)malloc(sizeof(struct node));
if(i==n){break;}
  printf("Enter coeficient for term %d : ",i+1);
    scanf("%d",&nn->coefficient);
    printf("Enter exponent for term %d : ",i+1);
    scanf("%d",&nn->powe);

  if(head==NULL)
  {
  head=nn;
  prev=nn;
    continue;
  }
prev->link=nn;
prev=nn;
  }
  prev->link=nn;
  nn->link=head;
return  nn;
 }

struct node * addition(struct node *p1,struct node *p2)
 {
struct node *h=NULL,*t1=p1->link,*t2=p2->link,*prev,*n;
while(t1!=p1 && t2!=p2)
{
    n=(struct node *)malloc(sizeof(struct node));
    if(n==NULL)
    {
        printf("\nerror");
        exit(0);
    }
    if(t1->powe==t2->powe)
    {   n->coefficient=(t1->coefficient)+(t2->coefficient);
        n->powe =(t1->powe);
        t1=t1->link;
        t2=t2->link;
    }
    else  if(t1->powe > t2->powe)
    {
    n->coefficient=t1->coefficient;
    n->powe = t1->powe;
    t1=t1->link;
    }
    else
    {n->coefficient=t2->coefficient;
    n->powe=t2->powe;
    t2=t2->link;

    }


    if(h==NULL)
    {
        h=n;
        prev=n;
         n->link=h;
    }
    else
    {
        prev->link=n;
        prev=n;
        n->link=h;
    }

}

     while(p1!=t1)
     {
      n=(struct node *)malloc(sizeof(struct node));
        n->powe=t1->powe;
        n->coefficient=t1->coefficient;
        n->link=h;
        prev->link=n;
        prev=n;
        t1=t1->link;
     }

     while(p2!=t2)
     {
      n=(struct node *)malloc(sizeof(struct node));
        n->powe=t2->powe;
        n->coefficient=t2->coefficient;
        n->link=h;
        prev->link=n;
        prev=n;
        t2=t2->link;
     }
     n=(struct node *)malloc(sizeof(struct node));
     prev->link=n;
     n->link=h;
     return n;
  }


 void Display(struct node *p)
 {
     struct node *t=p->link;
    printf("\n");
    if(t!=NULL)
    {while(t!=p)
        {
            printf("    %d x^%d",t->coefficient,t->powe);
              t=t->link;

        }
  }
  else
  {printf("\nnull");}
 }

 void evalvate(struct node *p,int a)
 {
     int sum=0;
     printf("\n");
     struct node *t=p->link;
     while(t!=p)
     {
            printf("    %d (%d)^%d",t->coefficient,a,t->powe);
         sum+= t->coefficient * pow( a,t->powe);
         t=t->link;
          if(t!=p)
              {
                  printf(" + ");
              }
     }
     printf("\t = %d  ",sum);
 }


void main()
{
struct node *h1,*h2,*h3;;
int c,n,e;
while(1)
    {
        printf("\n1.addition");
        printf("\n2.multiplication");
        printf("\n3.evaluate");
        printf("\n4.Exit");
        scanf("%d",&c);
        switch(c)
        {case 1:
                printf("\nEnter the no. of terms of 1st Polynomial");
                scanf("%d",&n);
                h1=createlist(n);
                Display(h1);
                printf("\nEnter the no. of terms of 2nd Polynomial");
                scanf("%d",&n);
                h2=createlist(n);
                Display(h2);
                h3=addition(h1,h2);
                printf("\n addition is :\n\n");
                Display(h3);
                break;
         case 2:printf("\nEnter the no. of terms of 1st Polynomial");
                scanf("%d",&n);
                h1=createlist(n);
                Display(h1);
                printf("\nEnter the no. of terms of 2nd Polynomial");
                scanf("%d",&n);
                h2=createlist(n);
                Display(h2);
                h3=multiplication(h1,h2);
                printf("\n multiplication is");
                Display(h3);
                break;
         case 3:printf("\nEnter the number of terms of 1st Polynomial");
                scanf("%d",&n);
                h1=createlist(n);
                Display(h1);
                printf("\nEnter the value for x : \t");
                scanf("%d",&e);
                evalvate(h1,e);
         case 4: exit(0);
        }


    }

}


Output:

1.addition
2.multiplication
3.evaluate
4.Exit

1

Enter the no. of terms of 1st Polynomial
3
Enter coeficient for term 1 : 3
Enter exponent for term 1 : 2
Enter coeficient for term 2 : 9
Enter exponent for term 2 : 1
Enter coeficient for term 3 : 6
Enter exponent for term 3 : 0

    3 x^2    9 x^1    6 x^0
Enter the no. of terms of 2nd Polynomial
2
Enter coeficient for term 1 : 2
Enter exponent for term 1 : 1
Enter coeficient for term 2 : 4
Enter exponent for term 2 : 0

    2 x^1    4 x^0
 addition is :


    3 x^2    11 x^1    10 x^0
1.addition
2.multiplication
3.evaluate
4.Exit
2

Enter the no. of terms of 1st Polynomial
2
Enter coeficient for term 1 : 2
Enter exponent for term 1 : 2
Enter coeficient for term 2 : 4
Enter exponent for term 2 : 0

    2 x^2    4 x^0
Enter the no. of terms of 2nd Polynomial
3
Enter coeficient for term 1 : 1
Enter exponent for term 1 : 0
Enter coeficient for term 2 : 2
Enter exponent for term 2 : 2
Enter coeficient for term 3 : 3
Enter exponent for term 3 : 3

    1 x^0    2 x^2    3 x^3
 multiplication is
    2 x^2    4 x^4    6 x^5    4 x^0    8 x^2    12 x^3
1.addition
2.multiplication
3.evaluate
4.Exit
3

Enter the number of terms of 1st Polynomial
3
Enter coeficient for term 1 : 6
Enter exponent for term 1 : 2
Enter coeficient for term 2 : 7
Enter exponent for term 2 : 1
Enter coeficient for term 3 : 8
Enter exponent for term 3 : 0

    6 x^2    7 x^1    8 x^0
Enter the value for x :         3

    6 (3)^2 +     7 (3)^1 +     8 (3)^0  = 83